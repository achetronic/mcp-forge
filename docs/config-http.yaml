# MCP Server Configuration
server:
  name: "MCP Server Template"
  version: "0.1.0"
  transport:
    type: "http"
    http:
      host: ":8080"

# Middleware Configuration
middleware:
  jwt:
    enabled: true
    validation:
      strategy: "forwarded"  # Values: 'local' or 'forwarded'
      # JWT forwarded by upstream proxy (Istio, etc.)
      # Ref: https://istio.io/latest/docs/reference/config/security/request_authentication/#JWTRule-output_payload_to_header
      forwarded_header: "X-Validated-Jwt"
      local:
        jwks_uri: &JwksUri "https://keycloak.example.com/realms/mcp-servers/protocol/openid-connect/certs"
        cache_interval: "10s"

# Oauth Authorization Server Configuration
# Endpoint: /.well-known/oauth-authorization-server
oauth_authorization_server:
  enabled: true

  # Following path will be attached: /.well-known/openid-configuration
  issuer_uri: "https://keycloak.example.com/realms/mcp-servers"

# Oauth Protected Resource Configuration
# Endpoint: /.well-known/oauth-protected-resource
oauth_protected_resource:
  enabled: true
  resource: "https://mcp-server-template.example.com"
  auth_servers:
    - "https://keycloak.example.com/realms/mcp-servers"
  jwks_uri: *JwksUri
  scopes_supported:
    - openid
    - profile
    - email
    - groups
    - mcp-server-template/custom-audience

  # Optional parameters (currently empty)
  bearer_methods_supported: []
  resource_signing_alg_values_supported: []
  resource_name: ""
  resource_documentation: ""
  resource_policy_uri: ""
  resource_tos_uri: ""
  tls_client_certificate_bound_access_tokens: false
  authorization_details_types_supported: []
  dpop_signing_alg_values_supported: []
  dpop_bound_access_tokens_required: false
